<%#
# Collection

This partial is used on the `index` and `show` pages
to display a collection of resources in an HTML table.

## Local variables:

- `collection_presenter`:
  An instance of [Administrate::Page::Collection][1].
  The table presenter uses `ResourceDashboard::COLLECTION_ATTRIBUTES` to determine
  the columns displayed in the table
- `resources`:
  An ActiveModel::Relation collection of resources to be displayed in the table.
  By default, the number of resources is limited by pagination
  or by a hard limit to prevent excessive page load times

[1]: http://www.rubydoc.info/gems/administrate/Administrate/Page/Collection
%>

<table aria-labelledby="<%= table_title %>" class="w-full">
  <thead class="border-b-2 border-gray-300">
    <tr>
      <% collection_presenter.attribute_types.each do |attr_name, attr_type| %>
        <th class="link text-gray-700 hover:text-gray-800 text-left pb-2 px-2
                   cell-label
                   cell-label--<%= attr_type.html_class %>
                   cell-label--<%= collection_presenter.ordered_html_class(attr_name) %>"
            scope="col"
            role="columnheader"
            aria-sort="<%= sort_order(collection_presenter.ordered_html_class(attr_name)) %>">
          <%= link_to(
                  sanitized_order_params(page, collection_field_name)
                      .merge(collection_presenter.order_params_for(attr_name, key: collection_field_name)),
                  class: 'link link-secondary'
              ) do %>
            <%= t(
                    "helpers.label.#{collection_presenter.resource_name}.#{attr_name}",
                    default: attr_name.to_s,
                    ).titleize %>
            <% if collection_presenter.ordered_by?(attr_name) %>
              <span class="cell-label__sort-indicator cell-label__sort-indicator--<%= collection_presenter.ordered_html_class(attr_name) %>">
                <%= fa_icon 'caret-up' if params[resource_name.to_sym][:direction].to_sym == :asc %>
                <%= fa_icon 'caret-down' if params[resource_name.to_sym][:direction].to_sym == :desc %>
              </span>
            <% end %>
          <% end %>
        </th>
      <% end %>
      <th scope="col"></th>
    </tr>
  </thead>

  <tbody>
    <% resources.each do |resource| %>
      <tr class="js-table-row hover:bg-gray-300"
          tabindex="0"
          <% if valid_action? :show, collection_presenter.resource_name %>
            <%= %(role=link data-url=#{polymorphic_path([namespace, resource])}) %>
          <% end %>
          >
        <% collection_presenter.attributes_for(resource).each do |attribute| %>
          <td class="cell-data cell-data--<%= attribute.html_class %> py-2 px-2">
            <% if show_action? :show, resource -%>
              <a href="<%= polymorphic_path([namespace, resource]) -%>"
                 class="action-show link link-primary"
                 >
                <%= render_field attribute %>
              </a>
            <% end -%>
          </td>
        <% end %>

        <td>
          <div class="flex items-center">
            <% if valid_action?(:edit, collection_presenter.resource_name) && show_action?(:edit, resource) %>
              <%= link_to fa_icon('pencil-alt'),
                          [:edit, namespace, resource],
                          class: "action-edit btn-sm btn-warning",
                          title: t("administrate.actions.edit") %>
            <% end %>
            <% if valid_action?(:destroy, collection_presenter.resource_name) && show_action?(:destroy, resource) %>
              <%= link_to fa_icon('trash'),
                          [namespace, resource],
                          class: "btn-sm btn-danger ml-2",
                          method: :delete,
                          data: { confirm: t("administrate.actions.confirm") },
                          title: t("administrate.actions.destroy") %>
            <% end %>
          </div>
        </td>
      </tr>
    <% end %>
  </tbody>
</table>
